@using System.Security.Claims;
@using ASPFinal.Models.Profile;
@model ASPFinal.Models.Profile.ProfileModel;
@{
    ViewData["Title"] = "Профіль";
    var editValidation = ViewData["validation"] as EditProfileValidationModel;
}

@if (editValidation is not null)
{
    <div> Edit Invalid </div>
}

<section class="h-100">
    <div class="container pt-3 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-9 col-xl-7">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="~/avatars/@(Model.Avatar)"
                                 alt="@(Model.Login)" class="img-fluid img-thumbnail mt-4 mb-2"
                                 style="width: 150px; z-index: 1">
                             @if(Model.IsPersonal)
                             {
                                <div style="z-index: 1;" class="d-flex">
                                    <button type="button" class="btn btn-outline-dark" data-mdb-ripple-color="dark" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                            Редагувати
                                    </button>
                                    <a role="button" class="btn btn-outline-danger mx-1" asp-action="Logout">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z" />
                                            <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z" />
                                        </svg>
                                    </a>
                                </div>
                             }
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5>@(Model.IsNamePublic || Model.IsPersonal ? Model.Name: Model.Login)</h5>
                            @if(Model.IsPersonal && !Model.IsEmailConfirmed)
                            {
                                <button class="btn btn-outline-warning btn-sm" data-bs-toggle="modal" data-bs-target="#confirmModal">Підтвердити e-mail</button>
                            }
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        <div class="d-flex justify-content-end text-center py-1">
                            <div class="px-1">
                                <p class="mb-1 h5">
                                    @Model.CoinsCount 
                                    @if (Model.IsPersonal)
                                    {
                                        <i role="button" id="add-coins-button">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                                            </svg>
                                        </i>
                                    }
                                </p>
                                <p class="small text-muted mb-0">Монет</p>
                            </div>
                            <div class="px-1">
                                <p class="mb-1 h5">@Model.CharactersCount</p>
                                <p class="small text-muted mb-0">Персонажів</p>
                            </div>
                            <div class="px-1">
                                <p class="mb-1 h5">@Model.ItemsCount</p>
                                <p class="small text-muted mb-0">Предметів</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4 text-black">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <p class="lead fw-normal mb-0">Інвентарь</p>
                            <p class="mb-0"><a href="#!" class="text-muted">Show all</a></p>
                        </div>
                        <div class="d-flex justify-content-center align-items-center mt-3">
                        @foreach(var item in Model.Items)
                        {
                            <div class="mx-5">
                                @Html.DisplayFor(m => item, "ItemProfile")
                            </div>
                        }
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!--Modal Edit-->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Profile" asp-action="EditProfile" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Редагування</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    
                    <!--Name Input-->
                    <div class="d-flex flex-row align-items-center mb-4">
                        <div class="form-outline flex-fill mb-0">
                            <label class="form-label" >Ваше ім'я</label>
                            <input type="text" value="@(Model.Name)" name="form-name" id="form-name"
                                   class="form-control @( editValidation is null
                                                                        ? "" : (editValidation.NameMessage is null
                                                                            ? "is-valid" : "is-invalid") )" />
                            @if (editValidation?.NameMessage is not null)
                            {
                                <div class="invalid-feedback"> @editValidation.NameMessage </div>
                            }
                        </div>
                    </div>

                    <!--Login Input-->
                    <div class="d-flex flex-row align-items-center mb-4">
                        <div class="form-outline flex-fill mb-0">
                            <label class="form-label">Ваш логін</label>
                            <input type="text" value="@(Model.Login)" name="form-login" id="form-login"
                                   class="form-control @( editValidation is null
                                                                        ? ""
                                                                        : (editValidation.LoginMessage is null
                                                                            ? "is-valid" : "is-invalid") )" />
                            @if (editValidation?.LoginMessage is not null)
                            {
                                <div class="invalid-feedback"> @editValidation.LoginMessage </div>
                            }
                        </div>
                    </div>

                    <!--Emai Input-->
                    <div class="d-flex flex-row align-items-center mb-4">
                        <div class="form-outline flex-fill mb-0">
                            <label class="form-label">Ваша пошта</label>
                            <input type="email" value="@(Model.Email)" name="form-email"id="form-email"
                                   class="form-control @( editValidation is null
                                                                        ? ""
                                                                        : (editValidation.EmailMessage is null
                                                                            ? "is-valid" : "is-invalid") )" />
                            @if (editValidation?.EmailMessage is not null)
                            {
                                <div class="invalid-feedback"> @editValidation.EmailMessage </div>
                            }
                        </div>
                    </div>

                    <!--Avatar Input-->
                    <div class="d-flex flex-row align-items-center mb-4">
                        <div class="form-outline flex-fill mb-0">
                            <label class="form-label">Виберіть файл для аватарки</label>
                            <input type="file" name="form-avatar" id="form-avatar"
                                   class="form-control @( editValidation is null
                                                                        ? ""
                                                                        : (editValidation.AvatarMessage is null
                                                                            ? "is-valid" : "is-invalid") )">
                            @if (editValidation?.AvatarMessage is not null)
                            {
                                <div class="invalid-feedback"> @editValidation.AvatarMessage </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Скасувати</button>
                    <button type="submit" class="btn btn-primary" id="login-button">Змінити</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!--Model Confirm-->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Введіть код з E-mail</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="confirm-addon">Код: </span>
                    <input type="text" class="form-control"
                           id="confirm-email-input"
                           placeholder="Код з електронної пошти" aria-describedby="confirm-addon">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning mx-2" id="resend-email-button">Надіслати новий код</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Скасувати          </button>
                <button type="button" class="btn btn-primary" id="confirm-email-button">Підтвердити        </button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const confirmEmailButton = document.getElementById("confirm-email-button");
        if (!confirmEmailButton) console.error("Element not found 'confirm-email-button'");
        else confirmEmailButton.addEventListener('click', confirmEmailButtonClick);

        const resendEmailButton = document.getElementById("resend-email-button");
        if (!resendEmailButton) console.error("Element not found 'resend-email-button'");
        else resendEmailButton.addEventListener('click', resendEmailButtonClick);

        const addCoinsButton = document.getElementById("add-coins-button");
        if (!addCoinsButton) console.error("Element not found 'add-coins-button'");
        else addCoinsButton.addEventListener('click', addCoinsButtonClick);
    });

    function confirmEmailButtonClick() {
        const confirmEmailInput = document.getElementById("confirm-email-input");
        if(!confirmEmailInput) throw "Element not found: 'confirm-email-input'";
        const emailCode = confirmEmailInput.value;
        if(emailCode.length === 0) {
            alert("Код не може бути порожним");
            return;
        }
        window.fetch("/Profile/ConfirmEmail", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(emailCode)
        })
        .then(r => r.json())
        .then(j => {
            console.log(j);
            if(j.status == "200") {
                window.location.reload();
            }
            else {
                alert(j.data);
            }
        })
    }
    function resendEmailButtonClick() {
        window.fetch("/Profile/ResendConfirmEmail", {
            method: "PATCH"
        }).then(r => r.text()).then(t => { console.log(t); });
    }
    function addCoinsButtonClick() {
        window.fetch("/Profile/AddCoins", {
            method: "GET"
        }).then(r => r.text()).then(t => { console.log(t); window.location.reload() });
    }
</script>